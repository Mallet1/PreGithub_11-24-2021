#BlueJ class context
comment0.target=Principal
comment0.text=\r\n\ Child\ class\ of\ SchoolEmployee\ (extends\ SchoolEmployee)\r\n\ Shows\ inheritance\r\n\ A\ Principal\ "IS-A"\ SchoolEmployee\r\n\ A\ Principal\ "IS-A"\ Occupation\r\n\ A\ Principal\ "IS-A"\ Object\r\n\ All\ public\ methods/fields\ from\ the\ parent\ class\ are\ inherited.\r\n\ Constructors\ are\ not\ inherited\!\r\n\ If\ no\ constructors\ are\ defined,\ then\ a\ default,\ no-args\ contructor\ will\ be\ automatically\ defined\r\n\ which\ sets\ all\ fields\ from\ the\ child\ class\ to\ default\ values\ and\ calls\ the\ default\ constructor\r\n\ from\ the\ parent\ class\ (if\ one\ exists).\r\n\ (Defaults\:\ ints/doubles\=0,\ booleans\=false,\ objects\ (including\ arrays\ and\ Strings)\=null)\r\n
comment1.params=
comment1.target=Principal()
comment2.params=s\ h\ n\ school\ p\ dut\ g
comment2.target=Principal(double,\ int,\ java.lang.String,\ java.lang.String,\ boolean,\ java.lang.String[],\ boolean)
comment3.params=
comment3.target=java.lang.String[]\ getDuties()
comment4.params=
comment4.target=boolean\ getGradeLevel()
comment5.params=student
comment5.target=void\ disciplineStudent(java.lang.String)
comment5.text=\r\n\ disciplineStudent(String\ student)--prints\ out\ that\ the\ principal\ is\ \r\n\ disciplining\ student\r\n
comment6.params=
comment6.target=java.lang.String\ toString()
comment6.text=\r\n\ Inherited\ methods\:\ toString(),\ philosophy(),\ aspirations()\r\n\ The\ method\ headers\ must\ match\ the\ parent\ class\!\r\n
comment7.params=
comment7.target=java.lang.String\ philosophy()
comment8.params=
comment8.target=java.lang.String\ aspirations()
numComments=9
