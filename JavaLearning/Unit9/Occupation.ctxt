#BlueJ class context
comment0.target=Occupation
comment1.params=
comment1.target=Occupation()
comment10.params=other
comment10.target=boolean\ equals(java.lang.Object)
comment10.text=\r\n\ equals()\ method\ is\ inherited\ from\ the\ Object\ class,\ \r\n\ must\ keep\ the\ same\ method\ header\r\n\ We\ will\ consider\ two\ occupations\ equal\ if\ they\ have\ the\ \r\n\ same\ salary\ and\ same\ hours\ per\ week.\r\n
comment11.params=
comment11.target=java.lang.String\ philosophy()
comment11.text=\r\n\ philosophy--returns\ a\ String\ with\ the\ worker's\ philosophy\ about\ work\r\n
comment12.params=
comment12.target=java.lang.String\ aspirations()
comment12.text=\r\n\ aspirations--returns\ a\ String\ with\ the\ worker's\ aspirations\ for\ the\ future\r\n
comment2.params=s\ d\ h\ n
comment2.target=Occupation(double,\ boolean,\ int,\ java.lang.String)
comment3.params=
comment3.target=double\ getSalary()
comment4.params=
comment4.target=boolean\ getDegreeReq()
comment5.params=
comment5.target=int\ getHours()
comment6.params=
comment6.target=java.lang.String\ getName()
comment7.params=s
comment7.target=void\ setSalary(double)
comment8.params=h
comment8.target=void\ setHours(int)
comment9.params=
comment9.target=java.lang.String\ toString()
comment9.text=\r\n\ toString()\ is\ inherited\ from\ the\ Object\ class\ (from\ lang\ package).\r\n\ You\ must\ keep\ the\ same\ method\ header\ as\ the\ Object\ class.\r\n\ When\ you\ rewrite\ a\ method\ from\ the\ parent\ class,\ \r\n\ this\ is\ called\ overriding\ the\ method.\r\n\ If\ you\ don't\ override\ toString(),\ it\ will\ return\ the\ memory\ address.\r\n\ getClass()--also\ from\ the\ Object\ class,\ returns\ the\ name\ of\ the\ class\ (not\ on\ AP\ exam)\r\n
numComments=13
